/*!
 *  opentok-whiteboard (http://github.com/aullman/opentok-whiteboard)
 *  
 *  Shared Whiteboard that works with OpenTok
 *
 *  @Author: Adam Ullman (http://github.com/aullman)
 *  @Copyright (c) 2014 Adam Ullman
 *  @License: Released under the MIT license (http://opensource.org/licenses/MIT)
**/
var OpenTokWhiteboard=angular.module("opentok-whiteboard",["opentok"]).directive("otWhiteboard",["OTSession",function(o){return{restrict:"E",scope:{color:"=",lineWidth:"&"},template:'<canvas></canvas><select name="color" ng-model="color"><option value="black" selected>black</option><option value="blue">blue</option><option value="red">red</option><option value="green">green</option></select>',link:function(e,t,n){var i,s,a,c=t.context.querySelector("canvas"),r={},l=!1,h=[],d=[];c.width=n.width||t.width(),c.height=n.height||t.height(),angular.element(c).css({width:"100%",height:"100%",position:"absolute",top:0,left:0}),angular.element("select").css({position:"absolute",top:0,right:0});var u=function(o){o.forEach(function(o){p(o)})},p=function(o){switch(r.hasOwnProperty(o.id)?i=r[o.id]:(i=c.getContext("2d"),i.lineCap="round",i.fillStyle="solid",r[o.id]=i),i.strokeStyle=o.color,i.lineWidth=o.lineWidth,o.type){case"mousedown":l=!0,i.beginPath(),i.moveTo(o.x,o.y);break;case"mousemove":l&&(i.lineTo(o.x,o.y),i.stroke());break;case"mouseup":l=!1,i.closePath()}h.push(o)},f=function(e){if(d.push(e),!t)var t=setTimeout(function(){o.session.signal({type:"otWhiteboard_update",data:JSON.stringify(d)}),d=[],t=null},100)};angular.element(c).on("mousedown mousemove mouseup",function(n){if("mousemove"!==n.type||l){var i=n.type,s=(angular.element(c).offset(),c.width/t.width()),a=c.height/t.height(),r=n.offsetX*s,h=n.offsetY*a,d={id:o.session.connection.connectionId,x:r,y:h,type:i,color:e.color,lineWidth:e.lineWidth()};p(d),f(d)}}),o.session.on({"signal:otWhiteboard_update":function(e){e.from.connectionId!==o.session.connection.connectionId&&u(JSON.parse(e.data))},"signal:otWhiteboard_history":function(o){s&&s!==o.from.connectionId||(s=o.from.connectionId,a||(a=[]),a.push.apply(a,JSON.parse(o.data)))},"signal:otWhiteboard_historyDone":function(){setTimeout(function(){a&&u(a)},1e3)},connectionCreated:function(e){if(h.length>0&&e.connection.connectionId!==o.session.connection.connectionId){for(var t=Array.prototype.slice.call(h);t.length>0;){for(var n=[];t.length>0&&JSON.stringify(n).length<5e3;)n.push(t.shift());o.session.signal({to:e.connection,type:"otWhiteboard_history",data:JSON.stringify(n)})}o.session.signal({to:e.connection,type:"otWhiteboard_historyDone"})}}})}}}]);